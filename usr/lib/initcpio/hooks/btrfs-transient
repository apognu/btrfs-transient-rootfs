#!/usr/bin/ash

log() {
  echo "btrfs-transient: $*" > /dev/kmsg
}

run_hook() {
  . /etc/btrfs-transient.sh

  mkdir -p /run/btrfs-transient
  mount "$BTRFS_DEVICE" /run/btrfs-transient
  cd /run/btrfs-transient
  
  mkdir -p "$SNAPSHOTS_SUBVOLUME" "$TRANSIENT_SUBVOLUME" "$INFO_SUBVOLUME"

  LAST_SNAPSHOT="$(ls -1 $SNAPSHOTS_SUBVOLUME | tail -1)"

  if [ -z "$LAST_SNAPSHOT" ]; then
    log 'initializing'
    btrfs subvolume snapshot "$LIVE_SUBVOLUME" "${SNAPSHOTS_SUBVOLUME}/$(date -Iseconds)"

    [ $? -ne 0 ] && return

    LAST_SNAPSHOT="$(ls -1 $SNAPSHOTS_SUBVOLUME | tail -1)"
  fi

  log 'doing backup of transient filesystem'
  btrfs subvolume snapshot "$LIVE_SUBVOLUME" "${TRANSIENT_SUBVOLUME}/$(date -Iseconds)"

  for TRANSIENT in $(ls -1 $TRANSIENT_SUBVOLUME | head -n -${TRANSIENT_RETENTION}); do
    btrfs subvolume delete "${TRANSIENT_SUBVOLUME}/${TRANSIENT}"
  done

  log 'deleting live filesystem and restoring last snapshot'
  btrfs subvolume delete "$LIVE_SUBVOLUME"
  btrfs subvolume snapshot "${SNAPSHOTS_SUBVOLUME}/${LAST_SNAPSHOT}" "$LIVE_SUBVOLUME"

  for SNAPSHOT in $(ls -1 $SNAPSHOTS_SUBVOLUME | head -n -${SNAPSHOTS_RETENTION}); do
    btrfs subvolume delete "${SNAPSHOTS_SUBVOLUME}/${SNAPSHOT}"
  done

  if [ "$USE_RO_ROOTFS" -eq 1 ]; then
    btrfs property set "$LIVE_SUBVOLUME" ro true
  fi

  cd /
  umount /run/btrfs-transient
}
